pipeline {
    agent any    
    tools {
        dotnetsdk 'dotnet'
    }
    environment {
        VERSION = ''
        DOCKERHUB = credentials("dockerhub")
    }
    stages {
        stage('Clear') {
            steps {
                deleteDir()
            }
        }
        stage('Checkout') {
            steps {                
                git 'https://github.com/charlesmendes13/Cloud.git'
            }
        }
        stage('Restore') {
            steps {
                bat "dotnet restore ./Crud.sln"
            }
        }
        stage('Build') {
            steps {                
                bat "dotnet build ./Crud.sln --configuration Release"
            }
        }
        stage('Docker Build') {
            steps {
                script {
                    def path = "${env.WORKSPACE}\\src\\Crud\\bin\\Release\\net6.0\\Crud.dll"
                    VERSION = powershell(returnStdout: true, script: "([System.Diagnostics.FileVersionInfo]::GetVersionInfo(\"${path}\")).FileVersion").trim()                                        
                } 
                dir('src/Crud') {                    
                    bat "docker build -t charlesmendes13/crud:$VERSION -f Dockerfile ."
                    bat "docker tag charlesmendes13/crud:$VERSION charlesmendes13/crud:latest"
                }               
            }
        }
        stage('Docker Push') {
            steps {                
                dir('src/Crud') {    
                    bat "docker login --username=$DOCKERHUB_USR --password=$DOCKERHUB_PSW"                                    
                    bat "docker push charlesmendes13/crud:$VERSION"
                    bat "docker push charlesmendes13/crud:latest"
                }
            }
        }
    }
}